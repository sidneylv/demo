// Generated by CoffeeScript 1.8.0
var Promise, fs, _;

Promise = require('bluebird');

_ = require('lodash');

fs = require('fs');

module.exports = {
  spawn: function(cmd, args, options) {
    var cmd_ext, fs_path, promise, ps, which;
    if (args == null) {
      args = [];
    }
    if (options == null) {
      options = {};
    }
    if (process.platform === 'win32') {
      cmd_ext = cmd + '.cmd';
      if (fs.existsSync(cmd_ext)) {
        cmd = cmd_ext;
      } else {
        which = require('which');
        cmd = which.sync(cmd);
      }
      fs_path = require('path');
      cmd = fs_path.normalize(cmd);
    }
    ps = null;
    promise = new Promise(function(resolve, reject) {
      var err, opts, spawn;
      opts = _.defaults(options, {
        stdio: 'inherit'
      });
      spawn = require('child_process').spawn;
      try {
        ps = spawn(cmd, args, opts);
      } catch (_error) {
        err = _error;
        deferred.reject(err);
      }
      ps.on('error', function(err) {
        return deferred.reject(err);
      });
      return ps.on('close', function(code, signal) {
        return resolve({
          code: code,
          signal: signal
        });
      });
    });
    promise.process = ps;
    return promise;
  }
};
